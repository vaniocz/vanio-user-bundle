{% trans_default_domain 'FOSUserBundle' %}

{% block errorMessage %}
    {% set message = null %}

    {% for error in form.email.vars.errors|merge(form.username.vars.errors ?? []) %}
        {% if error.messageTemplate in ['fos_user.email.already_used', 'fos_user.username.already_used'] %}
            {% if error.messageTemplate == 'fos_user.email.already_used' %}
                {% set user = find_user(form.email.vars.value) %}
                {% set message = user.enabled
                    ? 'registration.existing_account_with_same_email'|trans({'%loginUrl%': path('fos_user_security_login')})
                    : 'registration.existing_unactivated_account_with_same_email'|trans({'%confirmationUrl%': path('fos_user_send_confirmation', {email: user.email})})
                %}
            {% elseif not message and form.username is defined and find_user(form.username.vars.value).enabled ?? false %}
                {% set message = 'registration.existing_account_with_same_username_but_different_email'|trans({'%loginUrl%': path('fos_user_security_login')}) %}
            {% endif %}
        {% endif %}
    {% endfor %}

    {% if message %}
        {% include '@VanioUser/partials/alert.html.twig' with {type: 'warning'} %}
    {% endif %}
{% endblock %}

{% block form %}
    {{ form_start(form, {attr: formAttributes ?? {class: 'fos_user_registration_register'}}) }}
        {% block socialAuthentication %}
            {% if socialAuthentication ?? vanio_user.social_authentication %}
                <div class="social-authentication form-header">
                    <p>{{ 'registration.social_authentication'|trans }}</p>
                    {% include '@VanioUser/Security/social_authentication.html.twig' %}
                </div>
            {% endif %}
        {% endblock %}

        {% block formFields %}
            {{ form_widget(form) }}

            <div class="form-buttons form-group">
                <button class="btn btn-primary">{{ 'registration.submit'|trans }}</button>
            </div>
        {% endblock %}
    {{ form_end(form) }}
{% endblock %}
